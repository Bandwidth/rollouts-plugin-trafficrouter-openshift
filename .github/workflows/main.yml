# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Openshift Route plugin CI
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"

jobs:
  unit-tests:
    name: Unit tests running
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Unit tests running
        run: |
          make test

  linting:
    name: Go code lint and gosec
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Run golangci-lint
        run: |
          make lint

      - name: Run gosec
        run: |
          make gosec

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Download Go deps
        run: go mod download

      - name: Run go tests
        run: go test -v ./...

      - name: Get version
        id: versions
        run: echo "version=$(<VERSION)" >> $GITHUB_OUTPUT

      - name: Check if Tag Exists
        id: check_tag
        run: |
          git ls-remote --exit-code --tags origin '${{ steps.versions.outputs.version }}' && found=true
          if [[ "${found}" == "true" ]]; then
            echo "::error::The ${{ steps.versions.outputs.version }} tag already exists. Please update the version"
            exit 1
          fi

      - name: Create tag
        id: tag_version
        if: github.event_name == 'push'
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.versions.outputs.version }}
          tag_prefix: ""

      - name: GitHub Release
        if: github.event_name == 'push'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
    
  oreleaser:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: git fetch --force --tags
      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Release
        uses: Bandwidth/semver-releaser@PLAT-4466
        with:
          new_version: ${{ github.event.inputs.new-version || '' }}
          artifacts: 'dist/*'
